/* Add this class to your existing style.css */
.page-section {
    padding-top: 120px; /* Add space below the sticky header on sub-pages */
    padding-bottom: 80px;
}
/* ... rest of the CSS is the same as the previous answer ... */
document.addEventListener("DOMContentLoaded", () => {
    // --- Section 1: Define all page sections and their paths ---
    const sections = [
        { id: 'header-container', path: 'header/header.html' },
        { id: 'hero-container', path: 'hero/hero.html' },
        { id: 'about-container', path: 'about/about.html' },
        { id: 'services-container', path: 'services/services.html' },
        { id: 'products-container', path: 'products/products.html' },
        { id: 'custom-design-container', path: 'custom_design/custom_design.html' },
        { id: 'gallery-container', path: 'gallery/gallery.html' },
        { id: 'contact-container', path: 'contact/contact.html' },
        { id: 'footer-container', path: 'footer/footer.html' }
    ];

    // --- Section 2: Fetch and inject all HTML sections into the page ---
    Promise.all(sections.map(section => 
        fetch(section.path)
            .then(response => {
                if (!response.ok) throw new Error(`Failed to load ${section.path}`);
                return response.text();
            })
            .then(data => {
                const container = document.getElementById(section.id);
                if (container) {
                    container.innerHTML = data;
                } else {
                    console.warn(`Container with id #${section.id} not found.`);
                }
            })
    ))
    .then(() => {
        // --- Section 3: After all content is loaded, set up the interactive form ---
        setupOrderForm();
    })
    .catch(error => {
        console.error("Error loading page sections:", error);
        document.body.innerHTML = `<div style="text-align: center; padding: 50px; font-family: sans-serif;">
            <h1>Oops! Something went wrong.</h1><p>The website content could not be loaded. Please check the console for errors or try refreshing the page.</p>
            <p><i>Error: ${error.message}</i></p></div>`;
    });

    // --- Section 4: Function to handle form submission (Email + WhatsApp) ---
    function setupOrderForm() {
        const form = document.getElementById('order-form');
        const status = document.getElementById('form-status');
        const bakeryWhatsAppNumber = '9779845645446'; // Your WhatsApp number with country code

        if (!form) return; // Exit if the form isn't loaded yet

        form.addEventListener('submit', async function (e) {
            e.preventDefault();
            const formData = new FormData(form);
            const data = Object.fromEntries(formData.entries());

            let whatsappMessage = `*New Cake Order from Website!* ðŸŽ‰\n\n` +
                                  `*Customer:* ${data.name}\n` +
                                  `*Phone:* ${data.phone}\n` +
                                  (data.email ? `*Email:* ${data.email}\n` : '') +
                                  `*Address:* ${data.address}\n\n` +
                                  `*--- Order Details ---*\n` +
                                  `*Size:* ${data.cake_size}\n` +
                                  `*Flavor:* ${data.cake_flavor}\n` +
                                  (data.cake_message ? `*Message on Cake:* "${data.cake_message}"\n` : '') +
                                  (data.design_details ? `*Custom Details:* ${data.design_details}\n` : '') +
                                  (data.design_upload.name ? `*Reference Image:* An image has been sent to the email.\n` : '');

            const encodedMessage = encodeURIComponent(whatsappMessage);
            const whatsappURL = `https://wa.me/${bakeryWhatsAppNumber}?text=${encodedMessage}`;

            status.textContent = 'Sending your order...';
            status.style.color = 'gray';

            try {
                const response = await fetch(form.action, {
                    method: 'POST',
                    body: formData,
                    headers: { 'Accept': 'application/json' }
                });

                if (response.ok) {
                    status.textContent = "Order sent successfully! Redirecting to WhatsApp...";
                    status.style.color = 'green';
                    form.reset();
                    setTimeout(() => { window.open(whatsappURL, '_blank'); }, 1500);
                } else {
                    const errorData = await response.json();
                    throw new Error(errorData.errors ? errorData.errors.map(e => e.message).join(', ') : 'An unknown error occurred.');
                }
            } catch (error) {
                console.error('Submission Error:', error);
                status.textContent = `Oops! There was a problem: ${error.message}`;
                status.style.color = 'red';
            }
        });
    }
});